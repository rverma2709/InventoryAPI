@model Root.Models.ViewModels.UserViewModel
@{
    ViewData["Title"] = "Login";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}
<style type="text/css">
    .field-validation-error {
        color: red;
    }
</style>

<div class="container">
    <img class="img-fluid logo-dark mb-2 logo-color" src="assets/img/logo.webp" alt="Logo">
    <img class="img-fluid logo-light mb-2" src="assets/img/logo2-white.png" alt="Logo">
    <div class="loginbox">
        <div class="login-right">
            <div class="login-right-wrap">
                <h1>Login</h1>
                <p class="account-subtitle">Access to our dashboard</p>
                 @using (Html.BeginForm("Index", "Login", FormMethod.Post, new { @autocomplete = "off" }))
                 {
                    @Html.AntiForgeryToken();
                    
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(u => u.CrrURL)
                    <div class="input-block mb-3">
                        <label class="form-control-label">User Name</label>
                        @Html.TextBoxFor(u => u.UserName, new { @class = "form-control", @placeholder = "User Name", @autocomplete = "off" })
                        <p>
                            @Html.ValidationMessageFor(u => u.UserName)
                        </p>
                        <span class="glyphicon glyphicon-user form-control-feedback"></span>
                       
                    </div>
                    <div class="input-block mb-3">
                        <label class="form-control-label">Password</label>
                        <div class="pass-group">
                            @Html.PasswordFor(u => u.Password, new { @class = "form-control pass-input", @placeholder = "Password", @autocomplete = "off" })
                            <p>
                                @Html.ValidationMessageFor(u => u.Password)
                            </p>
                            <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                           @*  <input type="password" class="form-control pass-input">
                            <span class="fas fa-eye toggle-password"></span> *@
                        </div>
                    </div>
                    <div class="input-block mb-3">
                        <div class="row">
                            <div class="col-6">
                                <div class="form-check custom-checkbox">
                                    @Html.EditorFor(u => u.RememberMe) 
                                    
                                    <label class="custom-control-label" for="cb1">Remember me</label>
                                </div>
                            </div>
                            <div class="col-6 text-end">
                                <a class="forgot-link" href="forgot-password.html">Forgot Password ?</a>
                            </div>
                        </div>
                    </div>
                    <button id="loginButton" class="btn btn-lg  btn-primary w-100" type="submit">Login</button>
                  

                    <div class="text-center dont-have">Don't have an account yet? <a href="register.html">Register</a></div>
                }
               
            </div>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
@* <script>
    $().ready(() => {
        
        $('form').on('submit', () => {
            $('#preloader').show();
            if ($('form').valid()) {

                $('#preloader').hide();
                return true;
            }
            else {
                $('#preloader').hide();
                return false;
            }
        });
    });

</script> *@

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const loginButton = document.getElementById('loginButton');
        const preloader = document.getElementById('preloader');

        loginButton.addEventListener('click', function () {
            // Show the preloader
            preloader.style.display = 'block';
        });
    });
</script>